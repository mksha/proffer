project_name: proffer

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod download
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  # You can have multiple builds defined as a yaml list
  - 
    # ID of the build.
    # Defaults to the project name.
    id: "proffer_windows"

    # Custom flags templates.
    # Default is empty.
    flags:
      - -tags=windows
      - -v

    env:
    - CGO_ENABLED=0
  
    goos:
      - windows

    goarch:
      - 386
      - amd64
      - arm
      - arm64

  - id : "proffer"

    env:
    - CGO_ENABLED=0
    # GOOS list to build for.
    # For more info refer to: https://golang.org/doc/install/source#environment
    # Defaults are darwin and linux.
    goos:
      - darwin
      - linux

    # GOARCH to build for.
    # For more info refer to: https://golang.org/doc/install/source#environment
    # Defaults are 386 and amd64.
    goarch:
      - 386
      - amd64
      - arm
      - arm64

archives:
- files:
  - none*
  replacements:
    darwin: Darwin
    linux: Linux
    windows: Windows
    386: i386
    amd64: x86_64
  
  # Can be used to change the archive formats for specific GOOSs.
  # Most common use case is to archive as zip on Windows.
  # Default is empty.
  format_overrides:
    - goos: windows
      format: zip

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ .Tag }}-next"

changelog:
  # set it to true if you wish to skip the changelog generation
  skip: true
  # could either be asc, desc or empty
  # Default is empty
  sort: asc
  filters:
    # commit messages matching the regexp listed here will be removed from
    # the changelog
    # Default is empty
    exclude:
    - '^docs:'
    - '^test:'


release:
  # If set to true, will not auto-publish the release.
  # Default is false.
  # draft: true

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: true

  # You can change the name of the GitHub release.
  # Default is `{{.Tag}}`
  # name_template: "{{.ProjectName}}-v{{.Version}} {{.Env.USER}}"
